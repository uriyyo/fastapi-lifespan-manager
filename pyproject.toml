[tool.poetry]
name = "fastapi-lifespan-manager"
version = "0.1.2"
description = "FastAPI Lifespan Manager"
authors = ["Yurii Karabas <1998uriyyo@gmail.com>"]
license = "MIT"
readme = "README.md"
repository = "https://github.com/uriyyo/fastapi-lifespan-manager"
packages = [{ include = "fastapi_lifespan_manager" }]

[tool.poetry.dependencies]
python = "^3.8"
fastapi = ">=0.93.0"

[tool.poetry.group.dev.dependencies]
pytest = "^7.3.0"
pytest-cov = "^4.0.0"
pytest-asyncio = ">=0.21,<0.24"
black = "^23.3.0"
pre-commit = "^3.2.2"
httpx = ">=0.24,<0.26"
asgi-lifespan = "^2.1.0"
uvicorn = ">=0.21.1,<0.25.0"
mypy = "^1.2.0"
ruff = ">=0.0.261,<0.1.9"
typing-extensions = "^4.5.0"

[tool.black]
line-length = 120
target-version = ['py38']
include = '\.pyi?$'
exclude = '''
/(
    \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | _build
  | buck-out
  | build
  | dist
  # The following are specific to Black, you probably don't want those.
  | blib2to3
  | tests/data
  | profiling
)/
'''

[tool.ruff]
line-length = 120
select = [
    "E", # pycodestyle errors
    "W", # pycodestyle warnings
    "F", # pyflakes
    "I", # isort
    "C", # flake8-comprehensions
    "B", # flake8-bugbear
    "S", # flake8-bandit
    "G", # flake8-logging-format
    "PIE", # flake8-pie
    "COM", # flake8-commas
    "PT", # flake8-pytest-style
    "Q", # flake8-quotes
    "RSE", # flake8-raise
    "RET", # flake8-return
    "SIM", # flake8-simplify
    "TRY", # tryceratops
    "RUF", # ruff specific rules
    "T20", # flake8-print
]
ignore = [
    "B008", # do not perform function calls in argument defaults
    "S101", # allow use assert
    "E501", # allow long lines
    "RUF013", # implicit optional 
]
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".hg",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "venv",
    ".venv",
]
per-file-ignores = { }
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"
target-version = "py38"

[tool.ruff.mccabe]
max-complexity = 10

[tool.mypy]
python_version = 3.8
strict = true
follow_imports = "normal"
ignore_missing_imports = true
no_implicit_reexport = false
show_column_numbers= true
show_error_codes= true

[tool.coverage.paths]
source = ["fastapi_lifespan_manager"]

[tool.coverage.run]
source = ["fastapi_lifespan_manager"]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "@abstractmethod",
    "@overload",
    "if TYPE_CHECKING:",
]

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"
